{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliot\\\\Desktop\\\\music-management-app\\\\src\\\\components\\\\Songs\\\\SongForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongForm = props => {\n  _s();\n\n  const [song, setSong] = useState(() => {\n    return {\n      bookname: props.song ? props.song.bookname : '',\n      author: props.song ? props.song.author : '',\n      quantity: props.song ? props.song.quantity : '',\n      price: props.song ? props.song.price : '',\n      date: props.song ? props.song.date : ''\n    };\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n  const {\n    bookname,\n    author,\n    price,\n    quantity\n  } = song;\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const values = [bookname, author, price, quantity];\n    let errorMsg = '';\n    const allFieldsFilled = values.every(field => {\n      const value = `${field}`.trim();\n      return value !== '' && value !== '0';\n    });\n\n    if (allFieldsFilled) {\n      const song = {\n        id: uuidv4(),\n        bookname,\n        author,\n        price,\n        quantity,\n        date: new Date()\n      };\n      props.handleOnSubmit(song);\n    } else {\n      errorMsg = 'Please fill out all the fields.';\n    }\n\n    setErrorMsg(errorMsg);\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'quantity':\n        if (value === '' || parseInt(value) === +value) {\n          setSong(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      case 'price':\n        if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n          setSong(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      default:\n        setSong(prevState => ({ ...prevState,\n          [name]: value\n        }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    children: [errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMsg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"text\",\n          name: \"bookname\",\n          value: bookname,\n          placeholder: \"Enter name of book\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"text\",\n          name: \"author\",\n          value: author,\n          placeholder: \"Enter name of author\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"quantity\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"number\",\n          name: \"quantity\",\n          value: quantity,\n          placeholder: \"Enter available quantity\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Book Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"input-control\",\n          type: \"text\",\n          name: \"price\",\n          value: price,\n          placeholder: \"Enter price of book\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongForm, \"3CGJ5jiQDs8PME27qBtndN59hUE=\");\n\n_c = SongForm;\nexport default SongForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongForm\");","map":{"version":3,"sources":["C:/Users/Elliot/Desktop/music-management-app/src/components/Songs/SongForm.js"],"names":["React","useState","Form","Button","v4","uuidv4","SongForm","props","song","setSong","bookname","author","quantity","price","date","errorMsg","setErrorMsg","handleOnSubmit","event","preventDefault","values","allFieldsFilled","every","field","value","trim","id","Date","handleInputChange","name","target","parseInt","prevState","match"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst SongForm = (props) => {\r\n  const [song, setSong] = useState(() => {\r\n    return {\r\n        bookname: props.song ? props.song.bookname : '',\r\n        author: props.song ? props.song.author : '',\r\n        quantity: props.song ? props.song.quantity : '',\r\n        price: props.song ? props.song.price : '',\r\n        date: props.song ? props.song.date : ''\r\n    }\r\n  });\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const { bookname, author, price, quantity } = song;\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    const values = [bookname, author, price, quantity];\r\n    let errorMsg = '';\r\n\r\n    const allFieldsFilled = values.every((field) => {\r\n      const value = `${field}`.trim();\r\n      return value !== '' && value !== '0';\r\n    });\r\n\r\n    if (allFieldsFilled) {\r\n      const song = {\r\n        id: uuidv4(),\r\n        bookname,\r\n        author,\r\n        price,\r\n        quantity,\r\n        date: new Date()\r\n      };\r\n      props.handleOnSubmit(song);\r\n    } else {\r\n      errorMsg = 'Please fill out all the fields.';\r\n    }\r\n    setErrorMsg(errorMsg);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'quantity':\r\n        if (value === '' || parseInt(value) === +value) {\r\n            setSong((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n          }));\r\n        }\r\n        break;\r\n      case 'price':\r\n        if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n            setSong((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n          }));\r\n        }\r\n        break;\r\n      default:\r\n        setSong((prevState) => ({\r\n          ...prevState,\r\n          [name]: value\r\n        }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\">\r\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n      <Form onSubmit={handleOnSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Book Name</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"bookname\"\r\n            value={bookname}\r\n            placeholder=\"Enter name of book\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"author\">\r\n          <Form.Label>Book Author</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={author}\r\n            placeholder=\"Enter name of author\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"quantity\">\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            value={quantity}\r\n            placeholder=\"Enter available quantity\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Book Price</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={price}\r\n            placeholder=\"Enter price of book\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongForm;"]},"metadata":{},"sourceType":"module"}