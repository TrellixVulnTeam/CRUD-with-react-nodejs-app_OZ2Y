{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliot\\\\Desktop\\\\music-management-app\\\\src\\\\components\\\\Songs\\\\SongList.js\",\n    _s = $RefreshSig$();\n\nimport _ from 'lodash';\nimport React, { useContext } from 'react';\nimport SongsContext from '../../context/SongsContext';\nimport { Button, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom'; // import Song from './Song';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongList = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    songs\n  } = useContext(SongsContext);\n\n  const handleSongClick = ({\n    id\n  }) => {\n    history.push(`/songs/${id}`);\n  }; // songs.map((song) => (\n  //   <Button variant=\"primary\" onClick={() => handleSongClick(song)} >\n  //     { song.songname }\n  //   </Button>            \n  // ))\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: !_.isEmpty(songs) ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: songs.map((song, index) => {\n          /*#__PURE__*/\n          _jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => handleSongClick({\n                  song\n                }),\n                children: song.songname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"No songs available. Please add some songs.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongList, \"JWoCLv6sWSNIkGDbAGIraKBv320=\", false, function () {\n  return [useHistory];\n});\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["C:/Users/Elliot/Desktop/music-management-app/src/components/Songs/SongList.js"],"names":["_","React","useContext","SongsContext","Button","Table","useHistory","SongList","history","songs","handleSongClick","id","push","isEmpty","map","song","index","songname"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYP,UAAU,CAACC,YAAD,CAA5B;;AAEA,QAAMO,eAAe,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAU;AAChCH,IAAAA,OAAO,CAACI,IAAR,CAAc,UAASD,EAAG,EAA1B;AACD,GAFD,CAJqB,CAQrB;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACK,CAACX,CAAC,CAACa,OAAF,CAAUJ,KAAV,CAAD,gBACC,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGA,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B;AAAA;AAAA,oCACE;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,OAAO,EAAE,MAAMN,eAAe,CAAC;AAACK,kBAAAA;AAAD,iBAAD,CAAxD;AAAA,0BACEA,IAAI,CAACE;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAsBC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBN;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA3CD;;GAAMV,Q;UACYD,U;;;KADZC,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import _ from 'lodash';\r\nimport React, { useContext } from 'react';\r\nimport SongsContext from '../../context/SongsContext';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n// import Song from './Song';\r\n\r\nconst SongList = () => {\r\n  const history = useHistory();\r\n  const { songs } = useContext(SongsContext);\r\n\r\n  const handleSongClick = ({id}) => {    \r\n    history.push(`/songs/${id}`);\r\n  }\r\n\r\n  // songs.map((song) => (\r\n  //   <Button variant=\"primary\" onClick={() => handleSongClick(song)} >\r\n  //     { song.songname }\r\n  //   </Button>            \r\n  // ))\r\n\r\n  return (\r\n    <React.Fragment>      \r\n        {!_.isEmpty(songs) ? (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Song</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>            \r\n              {songs.map((song, index) => {\r\n                <tr>\r\n                  <td>{index}</td>\r\n                  <td>\r\n                    <Button variant=\"primary\" onClick={() => handleSongClick({song})} >\r\n                    { song.songname }\r\n                    </Button>                      \r\n                  </td>\r\n                </tr>          \r\n              })}              \r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p className=\"message\">No songs available. Please add some songs.</p>\r\n        )}\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SongList;"]},"metadata":{},"sourceType":"module"}