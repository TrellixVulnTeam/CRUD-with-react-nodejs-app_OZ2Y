{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliot\\\\Desktop\\\\music-management-app\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { loginUser } from '../../middleware/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [errorMsg, setErrorMsg] = useState(); // createUser = (e) => {\n  //   createUser(this.state.user)\n  //     .then(response => {\n  //       console.log(response);\n  //       this.setState({numberOfUsers: this.state.numberOfUsers + 1})\n  //   });\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const values = [username, password];\n    let errorMsg = '';\n    console.log(values);\n    const allFieldAreFilled = values.every(field => {\n      const value = `${field}`.trim();\n      return value !== '' && value !== '0';\n    });\n\n    if (allFieldAreFilled) {\n      let token = '';\n      loginUser({\n        username,\n        password\n      }).then(response => {\n        token = response;\n      });\n      console.log(JSON.stringify({\n        username,\n        password\n      })); // if(token ==! '')\n      //   setToken(token);\n      // const token = loginUser({\n      //   username,\n      //   password\n      // });\n      // setToken(token);\n    } else {\n      errorMsg = 'Please fill out all the fields.';\n    }\n\n    setErrorMsg(errorMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMsg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"daMlJYvUF9p+Ogv9YKZ6DfWoqXA=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Elliot/Desktop/music-management-app/src/components/Login/Login.js"],"names":["React","useState","PropTypes","Container","Form","Button","loginUser","Login","setToken","username","setUserName","password","setPassword","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","values","console","log","allFieldAreFilled","every","field","value","trim","token","then","response","JSON","stringify","target","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { loginUser } from '../../middleware/api';\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [errorMsg, setErrorMsg] = useState();\r\n\r\n  // createUser = (e) => {\r\n  //   createUser(this.state.user)\r\n  //     .then(response => {\r\n  //       console.log(response);\r\n  //       this.setState({numberOfUsers: this.state.numberOfUsers + 1})\r\n  //   });\r\n  // }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const values = [username, password];\r\n    let errorMsg = '';\r\n\r\n    console.log(values);\r\n    const allFieldAreFilled = values.every((field) => {\r\n      const value = `${field}`.trim();\r\n      return value !== '' && value !== '0';\r\n    });\r\n\r\n    if(allFieldAreFilled){\r\n      let token = '';\r\n      loginUser({username, password}).then((response) => {\r\n        token = response;\r\n      });\r\n\r\n      console.log(JSON.stringify({username, password}));\r\n\r\n      // if(token ==! '')\r\n      //   setToken(token);\r\n\r\n      // const token = loginUser({\r\n      //   username,\r\n      //   password\r\n      // });\r\n      // setToken(token);\r\n    }else{\r\n      errorMsg = 'Please fill out all the fields.';\r\n    }\r\n    setErrorMsg(errorMsg);\r\n  }\r\n\r\n  return(\r\n    <Container>    \r\n      <h1>Please Log In</h1>\r\n      <hr />\r\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={e => setUserName(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n        </Form.Group><br/>        \r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>      \r\n    </Container>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}